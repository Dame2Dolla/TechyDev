{"ast":null,"code":"var _jsxFileName = \"/home/patar450/Desktop/STC/Colaborative Development/Assigment/TechyDev/my-app/src/component/LoginForm/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./LoginForm.scss\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport SignupForm from \"../SignupForm/SignupForm\";\nimport Cookies from \"js-cookie\";\nimport ForgotPassword from \"../ForgotPassword/ForgotPassword\";\nimport Footer from \"../Footer/Footer\";\nimport { CsrfContext } from \"../Security/csrfcontext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  //Setting the value of e-mail and password in a used state using props.\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //First time signing in the initial state of the checkbox will be off.\n  const [rememberMe, setRememberMe] = useState(false);\n  //Implementation of show or hide password.\n  const [showPassword, setShowPassword] = useState(false);\n  // If password is incorrect textarea changes to red.\n  const [wrongCredentials, setWrongCredentials] = useState(false);\n  //Use navigate hook to direct to the new site.\n  const navigate = useNavigate();\n  // CSRF token, useContext will be used for Global access across react\n  const {\n    csrfToken\n  } = useContext(CsrfContext);\n  console.log(csrfToken);\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleLoginSubmit = event => {\n    //Prevents a reload.\n    event.preventDefault();\n    console.log(csrfToken);\n    // Send a POST request to the PHP API to check if the user exists\n    // --> Check the URL when testing.\n    fetch(\"https://techytest23.000webhostapp.com/api/authentication.php\", {\n      method: \"POST\",\n      headers: {\n        // Type Application: Form Value.\n        // Reference: https://www.geeksforgeeks.org/http-headers-content-type/\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      },\n      body: `email=${email}&password=${password}&csrf_token=${csrfToken}`\n    }).then(response => response.text()).then(data => {\n      if (data === \"User exists\") {\n        //If statement to check if the initial value of the cookie is ticked and will remain in storage for 7 days. If not the cookie is removed.\n        if (rememberMe) {\n          Cookies.set(\"email\", email, {\n            expires: 7\n          });\n        } else {\n          Cookies.remove(\"email\");\n        }\n        // If the user exists, redirect to the home page (<--- need to build a home page.)\n        navigate(\"/homepage\");\n      } else if (data === \"Locked account\") {\n        alert(\"This account is locked, please e-mail customer support.\");\n      } else if (data === \"Invalid Password\") {\n        // Sensitive information disclosure was fixed by alerting user with the following message if any of the credentials is wrong.\n        // Security consultant Clayton Farrugia\n        alert(\"Invalid email or password. Please try again.\");\n        // set pasWordError to true.\n        setWrongCredentials(true);\n      } else if (data === \"Invalid\") {\n        alert(\"Please, fill your login information.\");\n      }\n    }).catch(error => console.error(error));\n  };\n  //UseEffect is used to pre fill the checkbox if the cookie aleary exists. This is done PreLoad.\n  useEffect(() => {\n    const emailFromCookie = Cookies.get(\"email\");\n    if (emailFromCookie) {\n      setEmail(emailFromCookie);\n      setRememberMe(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLoginSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: `form-control ${wrongCredentials ? \"is-invalid\" : \"\"}`,\n            value: email,\n            onChange: handleEmailChange,\n            placeholder: \"Email@email.com\",\n            title: \"Enter your e-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\",\n            className: `form-control ${wrongCredentials ? \"is-invalid\" : \"\"}`,\n            value: password,\n            onChange: handlePasswordChange,\n            placeholder: \"Abc123?!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn password-icon\",\n            type: \"button\",\n            onClick: () => setShowPassword(!showPassword),\n            children: showPassword ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEyeSlash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEye\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: \"remember-me-checkbox\",\n            checked: rememberMe,\n            onChange: e => setRememberMe(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"remember-me-checkbox\",\n            children: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"csrf_token\",\n          value: csrfToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SignupForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ForgotPassword, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LoginForm, \"SZHfZ4WixdIN77eJnw/RARPsbUQ=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","FontAwesomeIcon","faEye","faEyeSlash","SignupForm","Cookies","ForgotPassword","Footer","CsrfContext","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","email","setEmail","password","setPassword","rememberMe","setRememberMe","showPassword","setShowPassword","wrongCredentials","setWrongCredentials","navigate","csrfToken","console","log","handleEmailChange","event","target","value","handlePasswordChange","handleLoginSubmit","preventDefault","fetch","method","headers","body","then","response","text","data","set","expires","remove","alert","catch","error","emailFromCookie","get","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","title","onClick","icon","id","checked","e","htmlFor","name","_c","$RefreshReg$"],"sources":["/home/patar450/Desktop/STC/Colaborative Development/Assigment/TechyDev/my-app/src/component/LoginForm/LoginForm.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./LoginForm.scss\";\nimport \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport SignupForm from \"../SignupForm/SignupForm\";\nimport Cookies from \"js-cookie\";\nimport ForgotPassword from \"../ForgotPassword/ForgotPassword\";\nimport Footer from \"../Footer/Footer\";\nimport { CsrfContext } from \"../Security/csrfcontext\";\n\nconst LoginForm = () => {\n  //Setting the value of e-mail and password in a used state using props.\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //First time signing in the initial state of the checkbox will be off.\n  const [rememberMe, setRememberMe] = useState(false);\n  //Implementation of show or hide password.\n  const [showPassword, setShowPassword] = useState(false);\n  // If password is incorrect textarea changes to red.\n  const [wrongCredentials, setWrongCredentials] = useState(false);\n  //Use navigate hook to direct to the new site.\n  const navigate = useNavigate();\n  // CSRF token, useContext will be used for Global access across react\n  const {csrfToken} = useContext(CsrfContext);\n  \n  console.log(csrfToken);\n  const handleEmailChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleLoginSubmit = (event) => {\n    //Prevents a reload.\n    event.preventDefault();\n    console.log(csrfToken);\n    // Send a POST request to the PHP API to check if the user exists\n    // --> Check the URL when testing.\n    fetch(\"https://techytest23.000webhostapp.com/api/authentication.php\", {\n      method: \"POST\",\n      headers: {\n        // Type Application: Form Value.\n        // Reference: https://www.geeksforgeeks.org/http-headers-content-type/\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `email=${email}&password=${password}&csrf_token=${csrfToken}`,\n    })\n      .then((response) => response.text())\n      .then((data) => {\n        if (data === \"User exists\") {\n          //If statement to check if the initial value of the cookie is ticked and will remain in storage for 7 days. If not the cookie is removed.\n          if (rememberMe) {\n            Cookies.set(\"email\", email, { expires: 7 });\n          } else {\n            Cookies.remove(\"email\");\n          }\n          // If the user exists, redirect to the home page (<--- need to build a home page.)\n          navigate(\"/homepage\");\n        } else if (data === \"Locked account\") {\n          alert(\"This account is locked, please e-mail customer support.\");\n        } else if (data === \"Invalid Password\") {\n          // Sensitive information disclosure was fixed by alerting user with the following message if any of the credentials is wrong.\n          // Security consultant Clayton Farrugia\n          alert(\"Invalid email or password. Please try again.\");\n          // set pasWordError to true.\n          setWrongCredentials(true);\n        } else if (data === \"Invalid\") {\n          alert(\"Please, fill your login information.\");\n        }\n      })\n      .catch((error) => console.error(error));\n  };\n  //UseEffect is used to pre fill the checkbox if the cookie aleary exists. This is done PreLoad.\n  useEffect(() => {\n    const emailFromCookie = Cookies.get(\"email\");\n    if (emailFromCookie) {\n      setEmail(emailFromCookie);\n      setRememberMe(true);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"login-form\">\n        <form onSubmit={handleLoginSubmit}>\n          <h2 className=\"text-center\">Login</h2>\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input\n              type=\"email\"\n              className={`form-control ${wrongCredentials ? \"is-invalid\" : \"\"}`}\n              value={email}\n              onChange={handleEmailChange}\n              placeholder=\"Email@email.com\"\n              title=\"Enter your e-mail\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Password:</label>\n            <input\n              type={showPassword ? \"text\" : \"password\"}\n              className={`form-control ${wrongCredentials ? \"is-invalid\" : \"\"}`}\n              value={password}\n              onChange={handlePasswordChange}\n              placeholder=\"Abc123?!\"\n            />\n\n            <button\n              className=\"btn password-icon\"\n              type=\"button\"\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              {showPassword ? (\n                <FontAwesomeIcon icon={faEyeSlash} />\n              ) : (\n                <FontAwesomeIcon icon={faEye} />\n              )}\n            </button>\n          </div>\n          <div className=\"form-group form-check\">\n            <input\n              type=\"checkbox\"\n              className=\"form-check-input\"\n              id=\"remember-me-checkbox\"\n              checked={rememberMe}\n              onChange={(e) => setRememberMe(e.target.checked)}\n            />\n            <label className=\"form-check-label\" htmlFor=\"remember-me-checkbox\">\n              Remember me\n            </label>\n          </div>\n          <input\n            type=\"hidden\"\n            name=\"csrf_token\"\n            value={csrfToken}/>\n          <button type=\"submit\" className=\"btn btn-primary btn-block\">\n            Log In\n          </button>\n        </form>\n        <SignupForm />\n\n        <ForgotPassword />\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}