{"ast":null,"code":"var _jsxFileName = \"/home/patar450/Desktop/STC/Colaborative Development/Assigment/TechyDev/my-app/src/component/Security/csrfcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CsrfContext = /*#__PURE__*/createContext();\nexport const CsrfProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // useState hook to store CSRF tokens.\n  const [csrfToken, setCsrfToken] = useState(\"\");\n  return (\n    /*#__PURE__*/\n    //CSRFContaxt makes the component available for every components.\n    _jsxDEV(CsrfContext.Provider, {\n      value: {\n        csrfToken,\n        setCsrfToken\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n//Makes the useCsrf function available globally in the javascript side.\n_s(CsrfProvider, \"EHFaAPiz98WfFBowhluUfrj0vvg=\");\n_c = CsrfProvider;\nexport const useCsrf = () => {\n  _s2();\n  return useContext(CsrfContext);\n};\n_s2(useCsrf, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CsrfProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CsrfContext","CsrfProvider","_ref","_s","children","csrfToken","setCsrfToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCsrf","_s2","$RefreshReg$"],"sources":["/home/patar450/Desktop/STC/Colaborative Development/Assigment/TechyDev/my-app/src/component/Security/csrfcontext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\nexport const CsrfContext = createContext();\n\nexport const CsrfProvider = ({ children }) => {\n  // useState hook to store CSRF tokens.\n  const [csrfToken, setCsrfToken] = useState(\"\");\n\n  return (\n    //CSRFContaxt makes the component available for every components.\n    <CsrfContext.Provider value={{ csrfToken, setCsrfToken }}>\n      {children}\n    </CsrfContext.Provider>\n  );\n};\n\n//Makes the useCsrf function available globally in the javascript side.\nexport const useCsrf = () => useContext(CsrfContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAE;AAE1C,OAAO,MAAMM,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC;EACA,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C;IAAA;IACE;IACAE,OAAA,CAACC,WAAW,CAACO,QAAQ;MAACC,KAAK,EAAE;QAAEH,SAAS;QAAEC;MAAa,CAAE;MAAAF,QAAA,EACtDA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACY;AAE3B,CAAC;;AAED;AAAAT,EAAA,CAZaF,YAAY;AAAAY,EAAA,GAAZZ,YAAY;AAazB,OAAO,MAAMa,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnB,UAAU,CAACI,WAAW,CAAC;AAAA;AAACe,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}