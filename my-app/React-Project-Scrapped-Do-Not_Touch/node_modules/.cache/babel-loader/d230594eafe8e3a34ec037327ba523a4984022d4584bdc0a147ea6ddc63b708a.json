{"ast":null,"code":"var _jsxFileName = \"/home/patar450/Desktop/STC/Colaborative Development/Assigment/TechyDev/my-app/src/component/Security/csrfcontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CsrfContext = /*#__PURE__*/createContext();\nexport const CsrfProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // useState hook to store CSRF tokens.\n  const [csrfToken, setCsrfToken] = useState(\"\");\n  useEffect(() => {\n    //Fetch CSRF token from the security_csrf.php\n    fetch(\"https://techytest23.000webhostapp.com/api/securitycsrf.php\").then(response => response.json()).then(data => setCsrfToken(data.csrfToken)).catch(error => console.error(error));\n  }, []);\n  console.log(csrfToken);\n  return (\n    /*#__PURE__*/\n    //CSRFContaxt makes the component available for every components.\n    _jsxDEV(CsrfContext.Provider, {\n      value: {\n        csrfToken,\n        setCsrfToken\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n//Makes the useCsrf function available globally in the javascript side.\n_s(CsrfProvider, \"7thIRoNTQT2NHQfhtsypbmOFsyY=\");\n_c = CsrfProvider;\nexport const useCsrf = () => {\n  _s2();\n  return useContext(CsrfContext);\n};\n_s2(useCsrf, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"CsrfProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CsrfContext","CsrfProvider","_ref","_s","children","csrfToken","setCsrfToken","fetch","then","response","json","data","catch","error","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCsrf","_s2","$RefreshReg$"],"sources":["/home/patar450/Desktop/STC/Colaborative Development/Assigment/TechyDev/my-app/src/component/Security/csrfcontext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n\nexport const CsrfContext = createContext();\n\nexport const CsrfProvider = ({ children }) => {\n  // useState hook to store CSRF tokens.\n  const [csrfToken, setCsrfToken] = useState(\"\");\n\n  useEffect(()=> {\n    //Fetch CSRF token from the security_csrf.php\n    fetch(\"https://techytest23.000webhostapp.com/api/securitycsrf.php\")\n    .then((response) => response.json())\n    .then((data)=> setCsrfToken(data.csrfToken))\n    .catch((error)=> console.error(error));\n  },[])\n  console.log(csrfToken);\n  return (\n    //CSRFContaxt makes the component available for every components.\n    <CsrfContext.Provider value={{ csrfToken, setCsrfToken }}>\n      {children}\n    </CsrfContext.Provider>\n  );\n};\n\n//Makes the useCsrf function available globally in the javascript side.\nexport const useCsrf = () => useContext(CsrfContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,OAAO,MAAMC,WAAW,gBAAGN,aAAa,EAAE;AAE1C,OAAO,MAAMO,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACvC;EACA,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAK;IACb;IACAU,KAAK,CAAC,4DAA4D,CAAC,CAClEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAIL,YAAY,CAACK,IAAI,CAACN,SAAS,CAAC,CAAC,CAC3CO,KAAK,CAAEC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACxC,CAAC,EAAC,EAAE,CAAC;EACLC,OAAO,CAACC,GAAG,CAACV,SAAS,CAAC;EACtB;IAAA;IACE;IACAN,OAAA,CAACC,WAAW,CAACgB,QAAQ;MAACC,KAAK,EAAE;QAAEZ,SAAS;QAAEC;MAAa,CAAE;MAAAF,QAAA,EACtDA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACY;AAE3B,CAAC;;AAED;AAAAlB,EAAA,CApBaF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAqBzB,OAAO,MAAMsB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAM7B,UAAU,CAACK,WAAW,CAAC;AAAA;AAACwB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}